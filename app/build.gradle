apply plugin: 'com.android.application'
if (enable_plugin_kotlin) {
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'
    apply plugin: 'kotlin-kapt'
}

android {
    compileSdkVersion version_setup_compileSdk
    flavorDimensions "default"

    defaultConfig {
        minSdkVersion version_setup_minSdk
        targetSdkVersion version_setup_targetSdk
        buildConfigField "boolean", "IS_TEST_BUILD", "false"
        buildConfigField "boolean", "IS_GPLAY_BUILD", "false"
        buildConfigField "String[]", "DETECTED_ANDROID_LOCALES", "${findUsedAndroidLocales()}"
        buildConfigField "String", "GITHASH", "\"${getGitHash()}\""
        resValue "string", "manifest_package_id", "com.github.dfa.diaspora_android"

        applicationId "com.github.dfa.diaspora_android"
        versionName "1.1.3"
        versionCode 32


        vectorDrawables.useSupportLibrary = true
        resValue 'string', 'app_name', "dandelion*"
        manifestPlaceholders = [appIcon: "@drawable/ic_launcher"]
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        if (enable_plugin_kotlin) {
            main.java.srcDirs += 'src/main/kotlin'
        }
    }

    productFlavors {
        flavorDefault {
        }

        /*
        flavorGplay {
            buildConfigField "boolean", "IS_GPLAY_BUILD", "true"
        }*/

        flavorTest {
            applicationId "com.github.dfa.secondlion"
            resValue 'string', 'app_name', "secondlion*"
            manifestPlaceholders = [appIcon: "@drawable/ic_launcher_test"]
            versionCode = Integer.parseInt(new Date().format('yyMMdd'))
            versionName = new Date().format('yyMMdd')
            buildConfigField "boolean", "IS_TEST_BUILD", "true"
        }
    }
    lintOptions {
        disable 'MissingTranslation'
    }
}

dependencies {
    // Sub-Projects
    //implementation project(':subprojectFromRoot')

    // Jars
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'

    // Android standard libs
    implementation "com.android.support:appcompat-v7:${version_library_appcompat}"
    implementation "com.android.support:design:${version_library_appcompat}"
    implementation "com.android.support:support-v4:${version_library_appcompat}"
    implementation "com.android.support:customtabs:${version_library_appcompat}"
    implementation "com.android.support:cardview-v7:${version_library_appcompat}"

    // UI libraries
    implementation "com.github.DASAR:ShiftColorPicker:v0.5"

    // Tool libraries
    implementation "info.guardianproject.netcipher:netcipher:${version_library_netcipher}"
    implementation "info.guardianproject.netcipher:netcipher-webkit:${version_library_netcipher}"
    implementation "com.jakewharton:butterknife:${version_library_butterknife}"
    if (enable_plugin_kotlin) {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$version_plugin_kotlin"
    }

    // Processors
    def anpros = ["com.jakewharton:butterknife-compiler:${version_library_butterknife}"]
    for (anpro in anpros) {
        if (enable_plugin_kotlin) {
            kapt anpro
        } else {
            annotationProcessor anpro
        }
    }
}
